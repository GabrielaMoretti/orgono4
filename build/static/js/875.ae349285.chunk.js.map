{"version":3,"file":"static/js/875.ae349285.chunk.js","mappings":"4QASe,SAASA,EAAYC,GAAiC,IAAhC,KAAEC,EAAI,SAAEC,GAAqBF,EAChE,MAAMG,GAAUC,EAAAA,EAAAA,QAAuB,OAChCC,EAAOC,IAAYC,EAAAA,EAAAA,UAASN,EAAKI,OAAS,SAC1CG,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAChDK,EAAqBC,IAA0BN,EAAAA,EAAAA,UAAS,CAAEO,EAAG,EAAGC,EAAG,IAG1E,SAASC,IACHX,IAAUJ,EAAKI,OAASJ,EAAKgB,eAC/BhB,EAAKgB,cAAcZ,GAErBI,GAAa,EACf,CAyBA,SAASS,EAAiBC,GAGxB,OAFAR,GAAmB,GAEXQ,GACN,IAAK,SAEHC,QAAQC,IAAI,qCACZ,MACF,IAAK,YACCpB,EAAKqB,aAAarB,EAAKqB,cAC3B,MACF,IAAK,SACCrB,EAAKsB,UAAUtB,EAAKsB,WAG9B,CAmBA,OAhBAC,EAAAA,EAAAA,WAAU,KACR,SAASC,IACPd,GAAmB,EACrB,CAQA,OANID,GACFgB,WAAW,KACTC,SAASC,iBAAiB,QAASH,IAClC,KAGE,KACLE,SAASE,oBAAoB,QAASJ,KAEvC,CAACf,KAGFoB,EAAAA,EAAAA,MAAA,OACEC,IAAK5B,EACL6B,UAAU,uIACVC,MAAO,CACLC,MAAOjC,EAAKiC,OAAS,IACrBC,OAAQlC,EAAKkC,QAAU,GACvBC,WAAYnC,EAAKoC,OAAS,OAC1BC,OAAQrC,EAAKqC,QAAU,qBAEzBC,cAxDJ,SAA2BC,GACzBA,EAAEC,iBACFD,EAAEE,kBAEF7B,EAAuB,CACrBC,EAAG0B,EAAEG,QACL5B,EAAGyB,EAAEI,UAGPjC,GAAmB,EACrB,EA8CqCkC,SAAA,EAGjCC,EAAAA,EAAAA,KAAA,OAAKd,UAAU,sCAAqCa,SACjDrC,GACCsC,EAAAA,EAAAA,KAAA,SACEd,UAAU,iFACVe,MAAO1C,EACP2C,SAAWR,GAAMlC,EAASkC,EAAES,OAAOF,OACnCG,OAAQlC,EACRmC,UA5EV,SAAuBX,GACP,UAAVA,EAAEY,IACJpC,IACmB,WAAVwB,EAAEY,MACX9C,EAASL,EAAKI,OAAS,QACvBI,GAAa,GAEjB,EAsEU4C,WAAS,KAGXP,EAAAA,EAAAA,KAAA,OACEd,UAAU,mBACVsB,QAAUd,IACRA,EAAEE,kBACFjC,GAAa,IACboC,SAEDxC,MAMNH,IACC4C,EAAAA,EAAAA,KAAA,OACEd,UAAU,8FACVC,MAAO,CAAEsB,aAAc,iBAK3BT,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACC,KAAK,SAASC,SAAUC,EAAAA,GAASC,IAAK5B,UAAU,eACxDc,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACC,KAAK,SAASC,SAAUC,EAAAA,GAASE,OAAQ7B,UAAU,eAC3Dc,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACC,KAAK,SAASC,SAAUC,EAAAA,GAASG,KAAM9B,UAAU,eACzDc,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CAACC,KAAK,SAASC,SAAUC,EAAAA,GAASI,MAAO/B,UAAU,cAGzDtB,IAAmBsD,EAAAA,EAAAA,eAClBlB,EAAAA,EAAAA,KAAA,OACEd,UAAU,wCACVsB,QAASA,IAAM3C,GAAmB,GAAOkC,UAEzCf,EAAAA,EAAAA,MAAA,OACEE,UAAU,6FACVC,MAAO,CACLgC,KAAMC,KAAKC,IAAIvD,EAAoBE,EAAGsD,OAAOC,WAAa,KAC1DC,IAAKJ,KAAKC,IAAIvD,EAAoBG,EAAGqD,OAAOG,YAAc,MAE5DjB,QAAUd,GAAMA,EAAEE,kBAAkBG,SAAA,EAEpCf,EAAAA,EAAAA,MAAA,UACEE,UAAU,8EACVsB,QAASA,IAAMpC,EAAiB,UAAU2B,SAAA,EAE1CC,EAAAA,EAAAA,KAAC0B,EAAAA,IAAmB,CAACxC,UAAU,YAAY,eAG7CF,EAAAA,EAAAA,MAAA,UACEE,UAAU,8EACVsB,QAASA,IAAMpC,EAAiB,aAAa2B,SAAA,EAE7CC,EAAAA,EAAAA,KAAC2B,EAAAA,IAAa,CAACzC,UAAU,YAAY,eAGvCc,EAAAA,EAAAA,KAAA,MAAId,UAAU,0BACdF,EAAAA,EAAAA,MAAA,UACEE,UAAU,0FACVsB,QAASA,IAAMpC,EAAiB,UAAU2B,SAAA,EAE1CC,EAAAA,EAAAA,KAAC4B,EAAAA,IAAe,CAAC1C,UAAU,YAAY,kBAK7CL,SAASgD,QAIjB,CClHA,QAjDO,SAAuB3E,GAAyE,IAAxE,aAAE4E,EAAY,cAAEC,EAAa,SAAEC,EAAQ,MAAEC,GAA4B/E,EAClG,OACE8B,EAAAA,EAAAA,MAAA,SAAOE,UAAU,wFAAuFa,SAAA,EACtGf,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAca,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAId,UAAU,kCAAiCa,SAAC,eAChDC,EAAAA,EAAAA,KAAA,KAAGd,UAAU,6BAA4Ba,SAAC,8BAK5Cf,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uBAAsBa,SAAA,EACnCC,EAAAA,EAAAA,KAAA,UACEd,UAAU,qFACVsB,QAASA,IAAMsB,EAAa,aAAa/B,SAC1C,kBAIDC,EAAAA,EAAAA,KAAA,UACEd,UAAU,wFACVsB,QAASA,IAAMsB,EAAa,UAAU/B,SACvC,gBAIDC,EAAAA,EAAAA,KAAA,UACEd,UAAU,2FACVsB,QAASA,IAAMsB,EAAa,QAAQ/B,SACrC,UAIDf,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gBAAea,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,MAAId,UAAU,2CAA0Ca,SAAC,kBACxDgC,EAAcG,MAAM,EAAG,GAAGC,IAAIC,IAC7BpC,EAAAA,EAAAA,KAAA,UAEEd,UAAU,4FACVsB,QAASA,IAAMsB,EAAa,oBAAgBO,EAAWD,GAAcrC,SAEpEqC,EAAaE,MAJTF,EAAaG,aAWhC,E,6BC5Be,SAASC,EAAiBtF,GAIb,IAJc,aACxCuF,EAAY,OACZC,EAAM,WACNC,GAAa,GACUzF,EAEvB,MAAM,YAAE0F,EAAW,eAAEC,EAAc,cAAEd,EAAa,SAAEC,EAAQ,MAAEC,IAAUa,EAAAA,EAAAA,MAGjEC,EAAOC,IAAYvF,EAAAA,EAAAA,UAAiB,KACpCwF,EAAOC,IAAYzF,EAAAA,EAAAA,UAAiB,KACpC0F,EAAmBC,IAAwB3F,EAAAA,EAAAA,UAAmC,OAC9E4F,EAAWC,IAAgB7F,EAAAA,EAAAA,WAAS,IACpC8F,EAAYC,IAAiB/F,EAAAA,EAAAA,WAAS,GAGvCgG,GAAoBC,EAAAA,EAAAA,SAAQ,IAC3BjB,GACEG,EAAYe,KAAKC,GAAMA,EAAGrB,KAAOE,IADd,KAEzB,CAACG,EAAaH,KAGjB/D,EAAAA,EAAAA,WAAU,KACR,GAAI+D,GAAgBgB,EAElBT,EAASS,EAAkBV,OAAS,IACpCG,EAASO,EAAkBR,OAAS,SAC/B,IAAKR,GAAgBE,EAAY,CAEtC,MAuCMkB,EAAoB,CACxB,CAAEtB,GAAI,YAAauB,OAAQ,SAAU3D,OAAQ,SAAU4D,UAAU,GACjE,CAAExB,GAAI,YAAauB,OAAQ,SAAU3D,OAAQ,SAAU4D,UAAU,IAGnEf,EA5C0B,CACxB,CACET,GAAI,SACJpF,KAAM,CACJI,MAAO,cACPgC,MAAO,UACPC,OAAQ,oBACRJ,MAAO,IACPC,OAAQ,IAEVuB,SAAU,CAAE5C,EAAG,IAAKC,EAAG,IACvB0C,KAAM,YAER,CACE4B,GAAI,SACJpF,KAAM,CACJI,MAAO,eACPgC,MAAO,UACPC,OAAQ,oBACRJ,MAAO,IACPC,OAAQ,IAEVuB,SAAU,CAAE5C,EAAG,IAAKC,EAAG,KACvB0C,KAAM,YAER,CACE4B,GAAI,SACJpF,KAAM,CACJI,MAAO,cACPgC,MAAO,UACPC,OAAQ,oBACRJ,MAAO,IACPC,OAAQ,IAEVuB,SAAU,CAAE5C,EAAG,IAAKC,EAAG,KACvB0C,KAAM,cAUVuC,EAASW,EACX,CAEAP,GAAa,IACZ,CAACb,EAAcgB,EAAmBd,IAGrC,MAAMqB,GAAgBN,EAAAA,EAAAA,SAAQ,MAC5BvF,cAAeA,CAACoE,EAAY0B,KAC1BjB,EAASD,GAASA,EAAMZ,IAAI+B,GAC1BA,EAAE3B,KAAOA,GAAE4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAC,IAAE/G,MAAIgH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOD,EAAE/G,MAAI,IAAEI,MAAO0G,MAAeC,IAEjEV,GAAc,IAGhBY,eAAgBA,CAAC7B,EAAY8B,EAAepE,KAC1C+C,EAASD,GAASA,EAAMZ,IAAI+B,GAC1BA,EAAE3B,KAAOA,GAAE4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAC,IAAE/G,MAAIgH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOD,EAAE/G,MAAI,IAAE,CAACkH,GAAQpE,MAAYiE,IAEhEV,GAAc,IAGhBc,SAAUA,CAAC/B,EAAYnD,EAAeC,KACpC2D,EAASD,GAASA,EAAMZ,IAAI+B,GAC1BA,EAAE3B,KAAOA,GAAE4B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQD,GAAC,IAAE/G,MAAIgH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOD,EAAE/G,MAAI,IAAEiC,QAAOC,aAAa6E,IAE/DV,GAAc,IAGhBhF,YAAc+D,IACZS,EAASD,IACP,MAAMwB,EAAOxB,EAAMY,KAAKO,GAAKA,EAAE3B,KAAOA,GACtC,IAAKgC,EAAM,OAAOxB,EAElB,MAAMyB,EAAK,GAAAC,OAAMC,KAAKC,OAGtB,MAAO,IAAI5B,GAAKoB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXI,GAAI,IACPhC,GAAIiC,EACJ5D,SAAU,CACR5C,EAAGuG,EAAK3D,SAAS5C,EANN,GAOXC,EAAGsG,EAAK3D,SAAS3C,EAPN,IASbd,MAAIgH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCI,EAAKpH,MAAI,IACZI,MAAM,GAADkH,OAAKF,EAAKpH,KAAKI,MAAK,sBAI/BiG,GAAc,IAGhB/E,SAAW8D,IACTS,EAASD,GAASA,EAAM6B,OAAOV,GAAKA,EAAE3B,KAAOA,IAC7CW,EAASD,GAASA,EAAM2B,OAAOlF,GAAKA,EAAEoE,SAAWvB,GAAM7C,EAAES,SAAWoC,IACpEiB,GAAc,MAEd,IAGEqB,GAAqBnB,EAAAA,EAAAA,SAAQ,IAC1BX,EAAMZ,IAAIoC,IAAIJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBI,GAAI,IACPpH,MAAIgH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCI,EAAKpH,MACL6G,GAAa,IAChB7F,cAAgBZ,GAAkByG,EAAc7F,cAAcoG,EAAKhC,GAAIhF,GACvE6G,eAAgBA,CAACC,EAAepE,IAAe+D,EAAcI,eAAeG,EAAKhC,GAAI8B,EAAOpE,GAC5FqE,SAAUA,CAAClF,EAAeC,IAAmB2E,EAAcM,SAASC,EAAKhC,GAAInD,EAAOC,GACpFb,YAAaA,IAAMwF,EAAcxF,YAAY+F,EAAKhC,IAClD9D,SAAUA,IAAMuF,EAAcvF,SAAS8F,EAAKhC,SAG/C,CAACQ,EAAOiB,IAGLc,GAAYC,EAAAA,EAAAA,aAAaC,IAC7B9B,EAAS+B,IAAOC,EAAAA,EAAAA,IAAQF,EAAQC,IAChCzB,GAAc,IACb,IAEG2B,GAAgBJ,EAAAA,EAAAA,aAAaK,IACjCpC,EAASD,IAASsC,EAAAA,EAAAA,IAAiBD,EAASrC,IAC5CS,GAAc,IACb,IAEG8B,GAAgBP,EAAAA,EAAAA,aAAaK,IACjClC,EAASD,IAASsC,EAAAA,EAAAA,IAAiBH,EAASnC,IAC5CO,GAAc,IACb,IAGGgC,GAAaT,EAAAA,EAAAA,aAAaU,IAC9BA,EAAM9F,iBACN8F,EAAMC,aAAaC,WAAa,QAC/B,IAEGC,GAASb,EAAAA,EAAAA,aAAaU,IAE1B,GADAA,EAAM9F,kBACDwD,EAAmB,OAExB,MAAMxC,EAAO8E,EAAMC,aAAaG,QAAQ,gBAClCC,EAAaL,EAAMC,aAAaG,QAAQ,eAE9C,IAAKlF,EAAM,OAEX,MAAMoF,EAAUN,EAAMtF,OAA0B6F,wBAC1CpF,EAAWuC,EAAkB8C,QAAQ,CACzCjI,EAAGyH,EAAM5F,QAAUkG,EAAO5E,KAC1BlD,EAAGwH,EAAM3F,QAAUiG,EAAOvE,MAG5B0E,EAAkBvF,EAAMC,EAAUkF,EAAaK,KAAKC,MAAMN,QAAczD,IACvE,CAACc,IAGE+C,GAAoBnB,EAAAA,EAAAA,aAAY,CAACpE,EAAcC,EAAqCzD,KACxF,MAAMoF,EAAE,GAAAkC,OAAMC,KAAKC,OACb0B,EAAezF,GAAY,CAAE5C,EAAG,IAAsB,IAAhBoD,KAAKkF,SAAgBrI,EAAG,IAAsB,IAAhBmD,KAAKkF,UAE/E,IAAIC,EAAgB,CAClBnH,MAAO,IACPC,OAAQ,GACRG,OAAQ,oBACRjC,MAAO,iBAIT,OAAQoD,GACN,IAAK,eACH4F,GAAQpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHoC,GAAQ,IACXhJ,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAQ,mBACrBkE,UAAc,OAAJrJ,QAAI,IAAJA,OAAI,EAAJA,EAAMsJ,OAAQ,eACxBlH,MAAO,UACPC,OAAQ,oBACRkH,KAAM,SACNtH,MAAO,IACPC,OAAQ,GACRsH,WAAY,eACZC,SAAc,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAMoF,KAElB,MAEF,IAAK,UACHgE,GAAQpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHoC,GAAQ,IACXhJ,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAQ,eACrBkE,UAAc,OAAJrJ,QAAI,IAAJA,OAAI,EAAJA,EAAM0J,SAAU,SAC1BtH,MAAO,UACPC,OAAQ,oBACRkH,KAAM,SACNtH,MAAO,IACPC,OAAQ,GACRsH,WAAY,UACZC,SAAc,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAMoF,KAElB,MAEF,IAAK,OACHgE,GAAQpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHoC,GAAQ,IACXhJ,OAAW,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,OAAQ,cACrB/C,MAAO,UACPC,OAAQ,oBACRkH,KAAM,OACNtH,MAAO,IACPC,OAAQ,GACRsH,WAAY,OACZC,SAAc,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAMoF,KAElB,MAEF,IAAK,YACHgE,GAAQpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHoC,GAAQ,IACXhJ,MAAO,eACPgC,MAAO,UACPC,OAAQ,sBAEV,MAEF,IAAK,SACH+G,GAAQpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHoC,GAAQ,IACXhJ,MAAO,aACPgC,MAAO,UACPC,OAAQ,sBAEV,MAEF,IAAK,OACH+G,GAAQpC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACHoC,GAAQ,IACXhJ,MAAO,OACPgC,MAAO,UACPC,OAAQ,oBACRkH,KAAM,SAKZ,MAAMI,EAAgB,CACpBvE,KACA5B,KAAM,WACNC,SAAUyF,EACVlJ,KAAMoJ,GAGRvD,EAASD,GAAS,IAAIA,EAAO+D,IAC7BtD,GAAc,IACb,IAGGuD,GAAiBhC,EAAAA,EAAAA,aAAY,KAC5BtC,IAELI,EAAemE,GAAQA,EAAK7E,IAAIyB,GAC9BA,EAAGrB,KAAOE,GAAY0B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbP,GAAE,IAAEb,QAAOE,QAAOgE,UAAW,IAAIvC,OACtCd,IAGNJ,GAAc,KACb,CAACf,EAAcM,EAAOE,EAAOJ,IAG1BqE,GAAmBnC,EAAAA,EAAAA,aAAY,KACnC,MAAM5H,EAAO,CACXoF,GAAIE,GAAgB,SACpBH,MAAuB,OAAjBmB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBnB,OAAQ,oBACjCS,QACAE,QACAkE,YAAY,IAAIzC,MAAO0C,eAGnBC,EAAO,IAAIC,KAAK,CAACnB,KAAKoB,UAAUpK,EAAM,KAAM,IAAK,CAAEwD,KAAM,qBACzD6G,EAAMC,IAAIC,gBAAgBL,GAC1BM,EAAI9I,SAAS+I,cAAc,KACjCD,EAAEE,KAAOL,EACTG,EAAEG,SAAQ,cAAArD,OAAiBtH,EAAKmF,KAAKyF,QAAQ,OAAQ,KAAKC,cAAa,SACvEL,EAAEM,QACFR,IAAIS,gBAAgBV,IACnB,CAAC/E,EAAcgB,EAAmBV,EAAOE,IAEtCkF,EAAY,CAAEC,SAAUnL,GAE9B,OAAIoG,GACKrD,EAAAA,EAAAA,KAACqI,EAAAA,EAAc,CAACC,QAAQ,8BAI/BtJ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,uCAAsCa,SAAA,EAEnDC,EAAAA,EAAAA,KAACuI,EAAc,CACbzG,aAAcoE,EACdnE,cAAeA,EACfC,SAAUA,EACVC,MAAOA,KAITjD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gCAA+Ba,SAAA,EAE5Cf,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oEAAmEa,SAAA,EAChFf,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBa,SAAA,CACrC2C,IACC1D,EAAAA,EAAAA,MAAA,UACEwB,QAASkC,EACTxD,UAAU,oJACVyB,KAAK,SAAQZ,SAAA,EAEbC,EAAAA,EAAAA,KAACwI,EAAAA,EAAS,CAACC,KAAM,KAAM,cAG3BzI,EAAAA,EAAAA,KAAA,MAAId,UAAU,kCAAiCa,UAC3B,OAAjB0D,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBnB,OAAQ,oBAE7BiB,IACCvD,EAAAA,EAAAA,KAAA,QAAMd,UAAU,yDAAwDa,SAAC,qBAM7Ef,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0BAAyBa,SAAA,EACtCf,EAAAA,EAAAA,MAAA,QAAME,UAAU,wBAAuBa,SAAA,CACpC8E,EAAmB6D,OAAO,gBAG5BjG,IACCzD,EAAAA,EAAAA,MAAA,UACEwB,QAASuG,EACT4B,UAAWpF,EACXrE,UAAU,0JAAyJa,SAAA,EAEnKC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAI,CAACH,KAAM,KAAM,aAKtBzJ,EAAAA,EAAAA,MAAA,UACEwB,QAAS0G,EACThI,UAAU,0GAAyGa,SAAA,EAEnHC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAQ,CAACJ,KAAM,KAAM,qBAO5BzI,EAAAA,EAAAA,KAAA,OAAKd,UAAU,yBAAwBa,UACrCC,EAAAA,EAAAA,KAAC8I,EAAAA,GAAiB,CAAA/I,UAChBf,EAAAA,EAAAA,MAAC+J,EAAAA,GAAS,CACRhG,MAAO8B,EACP5B,MAAOA,EACPkC,cAAeA,EACfG,cAAeA,EACfR,UAAWA,EACXkE,OAAQ5F,EACRwC,OAAQA,EACRJ,WAAYA,EACZyD,SAAO,EACPd,UAAWA,EACXjJ,UAAU,gBACVgK,gBAAiB,CAAElL,EAAG,EAAGC,EAAG,EAAGkL,KAAM,GAAIpJ,SAAA,EAEzCC,EAAAA,EAAAA,KAACoJ,EAAAA,EAAU,CACTC,IAAK,GACLZ,KAAM,EACNlJ,MAAM,aAERS,EAAAA,EAAAA,KAACsJ,EAAAA,EAAO,CACNC,UAAWA,IAAM,UACjBC,UAAU,uBACVtK,UAAU,uCACVuK,UAAQ,EACRC,UAAQ,KAEV1J,EAAAA,EAAAA,KAAC2J,EAAAA,EAAQ,CACPzK,UAAU,uCACV0K,UAAU,EACVC,aAAa,EACbC,iBAAiB,gBAQjC,C","sources":["components/EditableNode.tsx","components/ToolbarUnified.tsx","components/WhiteboardUnified.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Handle, Position, NodeProps } from \"reactflow\";\nimport { \n  Copy24Regular, \n  Delete24Regular, \n  PaintBrush24Regular\n} from \"@fluentui/react-icons\";\n\nexport default function EditableNode({ data, selected }: NodeProps) {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  const [label, setLabel] = useState(data.label || \"Node\");\n  const [isEditing, setIsEditing] = useState(false);\n  const [showContextMenu, setShowContextMenu] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState({ x: 0, y: 0 });\n\n  // Salvar mudanças do label\n  function handleLabelChange() {\n    if (label !== data.label && data.onLabelChange) {\n      data.onLabelChange(label);\n    }\n    setIsEditing(false);\n  }\n\n  // Configurar eventos de teclado para salvar com Enter\n  function handleKeyDown(e: React.KeyboardEvent) {\n    if (e.key === 'Enter') {\n      handleLabelChange();\n    } else if (e.key === 'Escape') {\n      setLabel(data.label || \"Node\");\n      setIsEditing(false);\n    }\n  }\n\n  // Menu de contexto\n  function handleContextMenu(e: React.MouseEvent) {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    setContextMenuPosition({\n      x: e.clientX,\n      y: e.clientY\n    });\n    \n    setShowContextMenu(true);\n  }\n\n  function handleMenuAction(action: string) {\n    setShowContextMenu(false);\n    \n    switch (action) {\n      case 'format':\n        // Aqui pode implementar menu de formatação depois\n        console.log('Formato não implementado ainda');\n        break;\n      case 'duplicate':\n        if (data.onDuplicate) data.onDuplicate();\n        break;\n      case 'delete':\n        if (data.onDelete) data.onDelete();\n        break;\n    }\n  }\n\n  // Fechar menu quando clicar fora\n  useEffect(() => {\n    function handleClickOutside() {\n      setShowContextMenu(false);\n    }\n\n    if (showContextMenu) {\n      setTimeout(() => {\n        document.addEventListener('click', handleClickOutside);\n      }, 100);\n    }\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [showContextMenu]);\n\n  return (\n    <div\n      ref={nodeRef}\n      className=\"relative rounded-xl shadow flex flex-col items-center justify-center cursor-pointer transition-all bg-white border-2 border-gray-300\"\n      style={{\n        width: data.width || 160,\n        height: data.height || 56,\n        background: data.color || '#fff',\n        border: data.border || '2px solid #cbd5e1',\n      }}\n      onContextMenu={handleContextMenu}\n    >\n      {/* Node content */}\n      <div className=\"text-center text-sm font-medium p-2\">\n        {isEditing ? (\n          <input\n            className=\"text-center bg-transparent border-none outline-none text-sm font-medium w-full\"\n            value={label}\n            onChange={(e) => setLabel(e.target.value)}\n            onBlur={handleLabelChange}\n            onKeyDown={handleKeyDown}\n            autoFocus\n          />\n        ) : (\n          <div\n            className=\"cursor-text px-1\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setIsEditing(true);\n            }}\n          >\n            {label}\n          </div>\n        )}\n      </div>\n\n      {/* Resize handle */}\n      {selected && (\n        <div\n          className=\"absolute bottom-0 right-0 w-3 h-3 bg-blue-500 cursor-se-resize opacity-70 hover:opacity-100\"\n          style={{ borderRadius: '0 0 12px 0' }}\n        />\n      )}\n\n      {/* Handles para conectar */}\n      <Handle type=\"target\" position={Position.Top} className=\"opacity-0\" />\n      <Handle type=\"source\" position={Position.Bottom} className=\"opacity-0\" />\n      <Handle type=\"target\" position={Position.Left} className=\"opacity-0\" />\n      <Handle type=\"source\" position={Position.Right} className=\"opacity-0\" />\n\n      {/* Menu de contexto */}\n      {showContextMenu && createPortal(\n        <div \n          className=\"fixed inset-0 bg-transparent z-[9999]\"\n          onClick={() => setShowContextMenu(false)}\n        >\n          <div \n            className=\"absolute bg-white border border-gray-300 rounded-lg shadow-xl py-2 min-w-[140px] z-[10000]\"\n            style={{\n              left: Math.min(contextMenuPosition.x, window.innerWidth - 150),\n              top: Math.min(contextMenuPosition.y, window.innerHeight - 100),\n            }}\n            onClick={(e) => e.stopPropagation()}\n          >\n            <button\n              className=\"w-full px-4 py-2 text-left text-sm hover:bg-blue-50 flex items-center gap-2\"\n              onClick={() => handleMenuAction('format')}\n            >\n              <PaintBrush24Regular className=\"w-4 h-4\" />\n              Formatar\n            </button>\n            <button\n              className=\"w-full px-4 py-2 text-left text-sm hover:bg-blue-50 flex items-center gap-2\"\n              onClick={() => handleMenuAction('duplicate')}\n            >\n              <Copy24Regular className=\"w-4 h-4\" />\n              Duplicar\n            </button>\n            <hr className=\"my-1 border-gray-200\" />\n            <button\n              className=\"w-full px-4 py-2 text-left text-sm hover:bg-red-50 text-red-600 flex items-center gap-2\"\n              onClick={() => handleMenuAction('delete')}\n            >\n              <Delete24Regular className=\"w-4 h-4\" />\n              Excluir\n            </button>\n          </div>\n        </div>,\n        document.body\n      )}\n    </div>\n  );\n}  ","import React from \"react\";\nimport { Collaborator, Project, Team } from \"../types\";\n\ninterface ToolbarUnifiedProps {\n  onAddElement: (type: string, position?: { x: number; y: number }, data?: any) => void;\n  collaborators: Collaborator[];\n  projects: Project[];\n  teams: Team[];\n}\n\nexport function ToolbarUnified({ onAddElement, collaborators, projects, teams }: ToolbarUnifiedProps) {\n  return (\n    <aside className=\"w-72 bg-white border-r border-gray-200 shadow-sm flex flex-col h-full overflow-y-auto\">\n      <div className=\"p-4 border-b\">\n        <h2 className=\"font-bold text-lg text-gray-800\">Elementos</h2>\n        <p className=\"text-sm text-gray-600 mt-1\">\n          Clique para adicionar\n        </p>\n      </div>\n      \n      <div className=\"flex-1 p-4 space-y-4\">\n        <button\n          className=\"w-full px-4 py-3 bg-blue-50 hover:bg-blue-100 text-blue-700 rounded-lg font-medium\"\n          onClick={() => onAddElement('rectangle')}\n        >\n          Retângulo\n        </button>\n        \n        <button\n          className=\"w-full px-4 py-3 bg-green-50 hover:bg-green-100 text-green-700 rounded-lg font-medium\"\n          onClick={() => onAddElement('circle')}\n        >\n          Círculo\n        </button>\n        \n        <button\n          className=\"w-full px-4 py-3 bg-yellow-50 hover:bg-yellow-100 text-yellow-700 rounded-lg font-medium\"\n          onClick={() => onAddElement('note')}\n        >\n          Nota\n        </button>\n        \n        <div className=\"border-t pt-4\">\n          <h3 className=\"font-semibold text-sm text-gray-700 mb-2\">Colaboradores</h3>\n          {collaborators.slice(0, 3).map(collaborator => (\n            <button\n              key={collaborator.id}\n              className=\"w-full mb-2 px-3 py-2 bg-emerald-50 hover:bg-emerald-100 text-emerald-700 rounded text-sm\"\n              onClick={() => onAddElement('collaborator', undefined, collaborator)}\n            >\n              {collaborator.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    </aside>\n  );\n}\n\nexport default ToolbarUnified;\n","import React, { useState, useCallback, useEffect, useMemo } from \"react\";\nimport ReactFlow, { \n  Node, \n  Edge, \n  addEdge, \n  Connection, \n  ReactFlowInstance, \n  applyNodeChanges, \n  applyEdgeChanges, \n  NodeChange, \n  EdgeChange,\n  MiniMap,\n  Controls,\n  Background,\n  ReactFlowProvider\n} from \"reactflow\";\nimport { ArrowLeft, Save, Download, Upload } from \"lucide-react\";\nimport EditableNode from \"./EditableNode\";\nimport ToolbarUnified from \"./ToolbarUnified\";\nimport { useWorkspace } from \"../state/WorkspaceContext\";\nimport { LoadingSpinner } from \"./LoadingSpinner\";\nimport \"reactflow/dist/style.css\";\n\ntype WhiteboardUnifiedProps = {\n  whiteboardId?: string;\n  onBack?: () => void;\n  standalone?: boolean;\n};\n\nexport default function WhiteboardUnified({ \n  whiteboardId, \n  onBack, \n  standalone = false \n}: WhiteboardUnifiedProps) {\n  // Context data\n  const { whiteboards, setWhiteboards, collaborators, projects, teams } = useWorkspace();\n  \n  // Local state\n  const [nodes, setNodes] = useState<Node[]>([]);\n  const [edges, setEdges] = useState<Edge[]>([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState<ReactFlowInstance | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasChanges, setHasChanges] = useState(false);\n  \n  // Current whiteboard data\n  const currentWhiteboard = useMemo(() => {\n    if (!whiteboardId) return null;\n    return whiteboards.find(wb => wb.id === whiteboardId) || null;\n  }, [whiteboards, whiteboardId]);\n\n  // Load whiteboard data\n  useEffect(() => {\n    if (whiteboardId && currentWhiteboard) {\n      // Load existing whiteboard\n      setNodes(currentWhiteboard.nodes || []);\n      setEdges(currentWhiteboard.edges || []);\n    } else if (!whiteboardId || standalone) {\n      // Default/demo nodes for standalone mode\n      const demoNodes: Node[] = [\n        { \n          id: 'demo-1', \n          data: { \n            label: 'Diretora RH',\n            color: '#3b82f6',\n            border: '2px solid #1e40af',\n            width: 160,\n            height: 56\n          }, \n          position: { x: 200, y: 50 }, \n          type: 'editable' \n        },\n        { \n          id: 'demo-2', \n          data: { \n            label: 'Equipe Alpha',\n            color: '#22c55e',\n            border: '2px solid #16a34a',\n            width: 140,\n            height: 50\n          }, \n          position: { x: 100, y: 200 }, \n          type: 'editable' \n        },\n        { \n          id: 'demo-3', \n          data: { \n            label: 'Equipe Beta',\n            color: '#eab308',\n            border: '2px solid #ca8a04',\n            width: 140,\n            height: 50\n          }, \n          position: { x: 300, y: 200 }, \n          type: 'editable' \n        },\n      ];\n      \n      const demoEdges: Edge[] = [\n        { id: 'demo-e1-2', source: 'demo-1', target: 'demo-2', animated: true },\n        { id: 'demo-e1-3', source: 'demo-1', target: 'demo-3', animated: true },\n      ];\n      \n      setNodes(demoNodes);\n      setEdges(demoEdges);\n    }\n    \n    setIsLoading(false);\n  }, [whiteboardId, currentWhiteboard, standalone]);\n\n  // Node action callbacks (memoized to prevent re-renders)\n  const nodeCallbacks = useMemo(() => ({\n    onLabelChange: (id: string, newLabel: string) => {\n      setNodes(nodes => nodes.map(n => \n        n.id === id ? { ...n, data: { ...n.data, label: newLabel } } : n\n      ));\n      setHasChanges(true);\n    },\n    \n    onFormatChange: (id: string, field: string, value: any) => {\n      setNodes(nodes => nodes.map(n => \n        n.id === id ? { ...n, data: { ...n.data, [field]: value } } : n\n      ));\n      setHasChanges(true);\n    },\n    \n    onResize: (id: string, width: number, height: number) => {\n      setNodes(nodes => nodes.map(n => \n        n.id === id ? { ...n, data: { ...n.data, width, height } } : n\n      ));\n      setHasChanges(true);\n    },\n    \n    onDuplicate: (id: string) => {\n      setNodes(nodes => {\n        const node = nodes.find(n => n.id === id);\n        if (!node) return nodes;\n        \n        const newId = `${Date.now()}`;\n        const offset = 40;\n        \n        return [...nodes, {\n          ...node,\n          id: newId,\n          position: { \n            x: node.position.x + offset, \n            y: node.position.y + offset \n          },\n          data: {\n            ...node.data,\n            label: `${node.data.label} (Cópia)`\n          }\n        }];\n      });\n      setHasChanges(true);\n    },\n    \n    onDelete: (id: string) => {\n      setNodes(nodes => nodes.filter(n => n.id !== id));\n      setEdges(edges => edges.filter(e => e.source !== id && e.target !== id));\n      setHasChanges(true);\n    }\n  }), []);\n\n  // Add callbacks to nodes\n  const nodesWithCallbacks = useMemo(() => {\n    return nodes.map(node => ({\n      ...node,\n      data: {\n        ...node.data,\n        ...nodeCallbacks,\n        onLabelChange: (label: string) => nodeCallbacks.onLabelChange(node.id, label),\n        onFormatChange: (field: string, value: any) => nodeCallbacks.onFormatChange(node.id, field, value),\n        onResize: (width: number, height: number) => nodeCallbacks.onResize(node.id, width, height),\n        onDuplicate: () => nodeCallbacks.onDuplicate(node.id),\n        onDelete: () => nodeCallbacks.onDelete(node.id),\n      }\n    }));\n  }, [nodes, nodeCallbacks]);\n\n  // ReactFlow callbacks\n  const onConnect = useCallback((params: Edge | Connection) => {\n    setEdges(eds => addEdge(params, eds));\n    setHasChanges(true);\n  }, []);\n  \n  const onNodesChange = useCallback((changes: NodeChange[]) => {\n    setNodes(nodes => applyNodeChanges(changes, nodes));\n    setHasChanges(true);\n  }, []);\n  \n  const onEdgesChange = useCallback((changes: EdgeChange[]) => {\n    setEdges(edges => applyEdgeChanges(changes, edges));\n    setHasChanges(true);\n  }, []);\n\n  // Drag and drop\n  const onDragOver = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  const onDrop = useCallback((event: React.DragEvent) => {\n    event.preventDefault();\n    if (!reactFlowInstance) return;\n    \n    const type = event.dataTransfer.getData('element-type');\n    const entityData = event.dataTransfer.getData('entity-data');\n    \n    if (!type) return;\n    \n    const bounds = (event.target as HTMLDivElement).getBoundingClientRect();\n    const position = reactFlowInstance.project({\n      x: event.clientX - bounds.left,\n      y: event.clientY - bounds.top,\n    });\n    \n    addElementToBoard(type, position, entityData ? JSON.parse(entityData) : undefined);\n  }, [reactFlowInstance]);\n\n  // Add element to board\n  const addElementToBoard = useCallback((type: string, position?: { x: number; y: number }, data?: any) => {\n    const id = `${Date.now()}`;\n    const nodePosition = position || { x: 100 + Math.random() * 300, y: 100 + Math.random() * 200 };\n    \n    let nodeData: any = {\n      width: 160,\n      height: 56,\n      border: '2px solid #cbd5e1',\n      label: 'Novo Elemento'\n    };\n\n    // Configure based on type\n    switch (type) {\n      case 'collaborator':\n        nodeData = {\n          ...nodeData,\n          label: data?.name || 'Novo Colaborador',\n          subtitle: data?.role || 'Função',\n          color: '#22c55e',\n          border: '2px solid #16a34a',\n          icon: 'person',\n          width: 180,\n          height: 70,\n          entityType: 'collaborator',\n          entityId: data?.id\n        };\n        break;\n      \n      case 'project':\n        nodeData = {\n          ...nodeData,\n          label: data?.name || 'Novo Projeto',\n          subtitle: data?.status || 'Status',\n          color: '#a21caf',\n          border: '2px solid #86198f',\n          icon: 'folder',\n          width: 170,\n          height: 65,\n          entityType: 'project',\n          entityId: data?.id\n        };\n        break;\n      \n      case 'team':\n        nodeData = {\n          ...nodeData,\n          label: data?.name || 'Nova Equipe',\n          color: '#f59e0b',\n          border: '2px solid #d97706',\n          icon: 'team',\n          width: 150,\n          height: 60,\n          entityType: 'team',\n          entityId: data?.id\n        };\n        break;\n      \n      case 'rectangle':\n        nodeData = {\n          ...nodeData,\n          label: 'Retângulo',\n          color: '#3b82f6',\n          border: '2px solid #1e40af'\n        };\n        break;\n      \n      case 'circle':\n        nodeData = {\n          ...nodeData,\n          label: 'Círculo',\n          color: '#22c55e',\n          border: '2px solid #16a34a'\n        };\n        break;\n      \n      case 'note':\n        nodeData = {\n          ...nodeData,\n          label: 'Nota',\n          color: '#eab308',\n          border: '2px solid #ca8a04',\n          icon: 'note'\n        };\n        break;\n    }\n    \n    const newNode: Node = {\n      id,\n      type: \"editable\",\n      position: nodePosition,\n      data: nodeData,\n    };\n    \n    setNodes(nodes => [...nodes, newNode]);\n    setHasChanges(true);\n  }, []);\n\n  // Save whiteboard\n  const saveWhiteboard = useCallback(() => {\n    if (!whiteboardId) return;\n    \n    setWhiteboards(prev => prev.map(wb => \n      wb.id === whiteboardId \n        ? { ...wb, nodes, edges, updatedAt: new Date() }\n        : wb\n    ));\n    \n    setHasChanges(false);\n  }, [whiteboardId, nodes, edges, setWhiteboards]);\n\n  // Export whiteboard\n  const exportWhiteboard = useCallback(() => {\n    const data = {\n      id: whiteboardId || 'export',\n      name: currentWhiteboard?.name || 'Whiteboard Export',\n      nodes,\n      edges,\n      exportedAt: new Date().toISOString()\n    };\n    \n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `whiteboard-${data.name.replace(/\\s+/g, '-').toLowerCase()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [whiteboardId, currentWhiteboard, nodes, edges]);\n\n  const nodeTypes = { editable: EditableNode };\n\n  if (isLoading) {\n    return <LoadingSpinner message=\"Carregando whiteboard...\" />;\n  }\n\n  return (\n    <div className=\"flex h-[calc(100vh-2rem)] bg-gray-50\">\n      {/* Toolbar lateral */}\n      <ToolbarUnified \n        onAddElement={addElementToBoard}\n        collaborators={collaborators}\n        projects={projects}\n        teams={teams}\n      />\n      \n      {/* Área principal do whiteboard */}\n      <div className=\"flex-1 flex flex-col bg-white\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 bg-white border-b shadow-sm\">\n          <div className=\"flex items-center gap-4\">\n            {onBack && (\n              <button\n                onClick={onBack}\n                className=\"flex items-center gap-2 text-blue-600 hover:bg-blue-50 px-3 py-2 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-blue-400\"\n                type=\"button\"\n              >\n                <ArrowLeft size={18} /> Voltar\n              </button>\n            )}\n            <h1 className=\"text-xl font-bold text-gray-800\">\n              {currentWhiteboard?.name || 'Whiteboard Demo'}\n            </h1>\n            {hasChanges && (\n              <span className=\"text-sm text-orange-600 bg-orange-50 px-2 py-1 rounded\">\n                Não salvo\n              </span>\n            )}\n          </div>\n          \n          <div className=\"flex items-center gap-2\">\n            <span className=\"text-sm text-gray-600\">\n              {nodesWithCallbacks.length} elementos\n            </span>\n            \n            {whiteboardId && (\n              <button\n                onClick={saveWhiteboard}\n                disabled={!hasChanges}\n                className=\"flex items-center gap-2 bg-blue-600 text-white px-3 py-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                <Save size={16} />\n                Salvar\n              </button>\n            )}\n            \n            <button\n              onClick={exportWhiteboard}\n              className=\"flex items-center gap-2 bg-gray-600 text-white px-3 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\n            >\n              <Download size={16} />\n              Exportar\n            </button>\n          </div>\n        </div>\n        \n        {/* ReactFlow Area */}\n        <div className=\"flex-1 overflow-hidden\">\n          <ReactFlowProvider>\n            <ReactFlow\n              nodes={nodesWithCallbacks}\n              edges={edges}\n              onNodesChange={onNodesChange}\n              onEdgesChange={onEdgesChange}\n              onConnect={onConnect}\n              onInit={setReactFlowInstance}\n              onDrop={onDrop}\n              onDragOver={onDragOver}\n              fitView\n              nodeTypes={nodeTypes}\n              className=\"w-full h-full\"\n              defaultViewport={{ x: 0, y: 0, zoom: 1 }}\n            >\n              <Background \n                gap={20} \n                size={1} \n                color=\"#e5e7eb\"\n              />\n              <MiniMap \n                nodeColor={() => '#3b82f6'} \n                maskColor=\"rgba(59,130,246,0.1)\" \n                className=\"bg-white border rounded-lg shadow-sm\"\n                pannable\n                zoomable\n              />\n              <Controls \n                className=\"bg-white border rounded-lg shadow-sm\"\n                showZoom={true}\n                showFitView={true}\n                showInteractive={true}\n              />\n            </ReactFlow>\n          </ReactFlowProvider>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["EditableNode","_ref","data","selected","nodeRef","useRef","label","setLabel","useState","isEditing","setIsEditing","showContextMenu","setShowContextMenu","contextMenuPosition","setContextMenuPosition","x","y","handleLabelChange","onLabelChange","handleMenuAction","action","console","log","onDuplicate","onDelete","useEffect","handleClickOutside","setTimeout","document","addEventListener","removeEventListener","_jsxs","ref","className","style","width","height","background","color","border","onContextMenu","e","preventDefault","stopPropagation","clientX","clientY","children","_jsx","value","onChange","target","onBlur","onKeyDown","key","autoFocus","onClick","borderRadius","Handle","type","position","Position","Top","Bottom","Left","Right","createPortal","left","Math","min","window","innerWidth","top","innerHeight","PaintBrush24Regular","Copy24Regular","Delete24Regular","body","onAddElement","collaborators","projects","teams","slice","map","collaborator","undefined","name","id","WhiteboardUnified","whiteboardId","onBack","standalone","whiteboards","setWhiteboards","useWorkspace","nodes","setNodes","edges","setEdges","reactFlowInstance","setReactFlowInstance","isLoading","setIsLoading","hasChanges","setHasChanges","currentWhiteboard","useMemo","find","wb","demoEdges","source","animated","nodeCallbacks","newLabel","n","_objectSpread","onFormatChange","field","onResize","node","newId","concat","Date","now","filter","nodesWithCallbacks","onConnect","useCallback","params","eds","addEdge","onNodesChange","changes","applyNodeChanges","onEdgesChange","applyEdgeChanges","onDragOver","event","dataTransfer","dropEffect","onDrop","getData","entityData","bounds","getBoundingClientRect","project","addElementToBoard","JSON","parse","nodePosition","random","nodeData","subtitle","role","icon","entityType","entityId","status","newNode","saveWhiteboard","prev","updatedAt","exportWhiteboard","exportedAt","toISOString","blob","Blob","stringify","url","URL","createObjectURL","a","createElement","href","download","replace","toLowerCase","click","revokeObjectURL","nodeTypes","editable","LoadingSpinner","message","ToolbarUnified","ArrowLeft","size","length","disabled","Save","Download","ReactFlowProvider","ReactFlow","onInit","fitView","defaultViewport","zoom","Background","gap","MiniMap","nodeColor","maskColor","pannable","zoomable","Controls","showZoom","showFitView","showInteractive"],"sourceRoot":""}